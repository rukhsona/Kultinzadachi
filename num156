// Бинарный поиск в упорядоченном массиве 
#include <stdio.h> 
#include <conio.h>
#define SZ 10 // размер массива 
void main() 
{ 
int a[SZ]; // массив целых 
int obr; // образец для поиска 
int ok; // 1 - массив упорядочен 
int verh,niz; // границы части массива, в которой 
// выполняется поиск 
int sred; // индекс среднего элемента в области 
// поиска 
int found; // 1 - поиск успешен 
int п; // счетчик сравнений с образцом 
int i; 
// ввод массива 
printf("*** Бинарный поиск ") ; 
printf("в упорядоченном массиве ***\п") ; 
printf("Введите массив (в одной строке %i ", SZ); 
printf("целых чисел) и нажмите <Enter>\n"); 
printf("-> ") ; 
for (i = 0; i < SZ; i++) 
scanf("%i", &a[i]); 
// проверим, упорядочен ли массив по возрастанию 
ок = 1; // пусть массив упорядочен 
i = 0; 
do 
if (a[i] <= a[i-bl]) 
i+-»-; 
else ok = 0; 
while (ok && i < SZ -1) ; 
if ( !ok) { 
puts("Введенный массив не является"); 
puts("упорядоченным по возрастаниюХп"); 
goto bye; 
}
printf("Введите образец для поиска (целое число) -> ") ; 
scanf("%i", &obr); 
// бинарный поиск 
verh = 0; 
niz =^ SZ - 1; 
found = 0; 
n = 0; 
do { 
sred = (niz-verh) / 2 + verh; // делим массив пополам 
n++; 
if (a[sred] == obr) 
found = 1; 
else 
/ /в какой части, в верхней или в нижней, 
// может находиться искомый элемент? 
if ( obr < а[sred]) 
niz = sred-1; //в верхней 
else verh = sred+1; // в нижней 
} while (verh <= niz && !found); 
if (found) { 
printf("Совпадение с элементом номер %i ", sred); 
printf("Выполнено %i сравнений" , n); 
} 
else 
printf("Образец в массиве не найденХп"); 
bye: 
printf("\пДля завершения работы нажмите <Enter>"); 
getch(); 
}
